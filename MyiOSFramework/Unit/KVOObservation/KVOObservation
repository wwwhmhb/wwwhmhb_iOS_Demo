
KVOObservation文件主要作用就是封装了KVO的事件监听，监听结果通过block进行回调，另外可以一次清空所有的监听，也可以移除指定的监听。
注意事项是，不能在self中添加对自身属性的监听，这样会导致无法释放self，导致内存泄漏，原因是在添加监听的时候被监听者会被添加到一个字典中，只有进行移除监听的时候才会从字典中移除，如果你在 dealloc 中添加移除监听的方法，其实就不会被执行，以至于导致内存泄漏。

具体使用如下：
if (!_kvoManager) {
_kvoManager = [[WWWKVOObservationManager alloc] init];
}
__weak __typeof__(self) weakSelf = self;
[_kvoManager addObserveObject:_textView andKeyPath:@"hidden" andContext:nil andResultBlock:^(NSDictionary *dict) {
__strong __typeof(self) strongSelf = weakSelf;
[strongSelf.textView removeFromSuperview];
}];
